// @flow weak

import React, {
  PureComponent
}                         from 'react';
import PropTypes          from 'prop-types';
import {
  AnimatedView,
  Panel,
  Breadcrumb as BreadcrumbComponent
}                         from '../../components';
import Highlight          from 'react-highlight';

const ReactDataGrid = require('react-data-grid');


class NewOffer extends PureComponent {
  static propTypes= {
    actions: PropTypes.shape({
      enterNewOffer: PropTypes.func.isRequired,
      leaveNewOffer: PropTypes.func.isRequired
    })
  };

  state = { path: ['home', 'newoffer'] };

  componentWillMount() {
    const { actions: { enterNewOffer } } = this.props;
    enterNewOffer();
  }

  componentWillUnmount() {
    const { actions: { leaveNewOffer } } = this.props;
    leaveNewOffer();
  }

  constructor(props, context) {
    super(props, context);
    this.createRows();
    this._columns = [
      { key: 'id', name: 'ID' },
      { key: 'title', name: 'Title' },
      { key: 'count', name: 'Count' } ];

    //this.state = null;
  }

  createRows = () => {
    let rows = [];
    for (let i = 1; i < 1000; i++) {
      rows.push({
        id: i,
        title: 'Title ' + i,
        count: i * 1000
      });
    }

    this._rows = rows;
  };

  rowGetter = (i) => {
    return this._rows[i];
  };

  handleGridRowsUpdated = ({ fromRow, toRow, updated }) => {
    let rows = this.state.rows.slice();

    for (let i = fromRow; i <= toRow; i++) {
      let rowToUpdate = rows[i];
      let updatedRow = update(rowToUpdate, {$merge: updated});
      rows[i] = updatedRow;
    }

    this.setState({ rows });
  };

  render() {
    const { path } = this.state;

    return(
      <AnimatedView>
        {/* preview: */}
        <div className="row">
          <div className="col-xs-12">
              <div className="row">
                <div className="col-xs-12">
                  <BreadcrumbComponent
                    path={path}
                  />
                </div>
              </div>
          </div>
        </div>
        {/* source: */}
        <div className="row">
          <div className="col-xs-12">
            <Panel
              title="Nuova Offerta Power"
              hasTitle={true}>
              <ReactDataGrid
                 enableCellSelect={true}
                columns={this._columns}
                rowGetter={this.rowGetter}
                rowsCount={this._rows.length}
                minHeight={500} 
                onGridRowsUpdated={this.handleGridRowsUpdated} />
            </Panel>
          </div>
        </div>
      </AnimatedView>
    );
  }
}

export default NewOffer;
